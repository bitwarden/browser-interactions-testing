name: Test-all
run-name: All tests with extension build ${{ inputs.CLIENTS_BRANCH || github.event.client_payload.origin_branch }} by @${{ github.actor }}
on:
  push:
    branches:
      - "main"
  repository_dispatch:
    types: [trigger-bit-tests]
  pull_request:
  workflow_dispatch:
    inputs:
      CLIENTS_BRANCH:
        default: "main"
        description: "clients branch of browser build to use"
        required: true
        type: string
      REMOTE_VAULT_CONFIG_MATCH:
        description: "URL to an endpoint returning a vault configuration (will default to US prod configuration)"
        required: false
        type: string
jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
      packages: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: "23"

      - name: Create dotenv file
        uses: ./.github/actions/setup-env-file
        with:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          BW_DB_PORT: ${{ vars.BW_DB_PORT }}
          BW_DB_PROVIDER: ${{ vars.BW_DB_PROVIDER }}
          BW_DB_SERVER: ${{ vars.BW_DB_SERVER }}
          BW_DOMAIN: ${{ vars.BW_DOMAIN }}
          BW_ENABLE_SSL: ${{ vars.BW_ENABLE_SSL }}
          REMOTE_VAULT_CONFIG_MATCH: ${{ inputs.REMOTE_VAULT_CONFIG_MATCH || vars.BW_REMOTE_VAULT_CONFIG_MATCH }}
          BW_SSL_CERT: ${{ vars.BW_SSL_CERT }}
          BW_SSL_KEY: ${{ vars.BW_SSL_KEY }}
          CI: true
          CLI_SERVE_HOST: ${{ vars.CLI_SERVE_HOST }}
          CLI_SERVE_PORT: ${{ vars.CLI_SERVE_PORT }}
          EXTENSION_BUILD_PATH: ${{ vars.EXTENSION_BUILD_PATH }}
          PAGES_HOST_INSECURE_PORT: ${{ vars.PAGES_HOST_INSECURE_PORT }}
          PAGES_HOST_PORT: ${{ vars.PAGES_HOST_PORT }}
          PAGES_HOST: ${{ vars.PAGES_HOST }}
          VAULT_HOST_INSECURE_PORT: ${{ vars.VAULT_HOST_INSECURE_PORT }}
          VAULT_HOST_PORT: ${{ vars.VAULT_HOST_PORT }}
          VAULT_HOST_URL: ${{ vars.VAULT_HOST_URL }}

      - name: Download extension artifact
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe # v3.1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build-browser.yml
          workflow_conclusion: ""
          branch: ${{ github.event.client_payload.origin_branch || inputs.CLIENTS_BRANCH || 'main' }}
          name: ^dist-chrome-MV3-\w{7}\.zip$
          name_is_regexp: true
          repo: bitwarden/clients
          if_no_artifact_found: fail
          skip_unpack: true

      - name: Unzip extension artifact
        run: |
          unzip -o *dist-chrome-*.zip.zip
          unzip -o 'dist-chrome*.zip' -d build

      - name: Generate and install certs
        run: |
          npm run setup:ssl
          sudo apt-get install libnss3-tools=2:3.98-1build1
          . .env
          mkdir -p $HOME/.pki/nssdb
          certutil -d $HOME/.pki/nssdb -N --empty-password
          certutil -d sql:$HOME/.pki/nssdb -A -t "CP,CP," -n TestAutomationSSL -i ./$BW_SSL_CERT

      - name: Install Bitwarden CLI
        run: npm install -g @bitwarden/cli@2024.2.0

      - name: Install project dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Match feature flags file to remote config
        run: |
          touch flags.json
          npm run setup:flags

      - name: Build and start the test vault
        run: docker compose up -d --build --remove-orphans --wait --wait-timeout 60

      - name: Setup the vault test account
        run: npm run seed:vault:account

      - name: Setup the vault test account ciphers
        run: |
          npm run start:cli
          npm run seed:vault:ciphers

      - name: Download test site build
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe # v3.1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          workflow_conclusion: ""
          branch: main
          name: build-files
          path: test-site
          repo: bitwarden/test-the-web
          if_no_artifact_found: fail

      - name: Copy over certs and install test site dependencies
        run: |
          cp ssl.crt test-site/api/
          cp ssl.key test-site/api/
          cd test-site
          npm ci

      - name: Run all tests
        id: playwright-tests
        run: npm run test:static:ci

      - name: Update job summary
        if: always()
        run: echo "$(<./test-summary/test-summary.md)" >> $GITHUB_STEP_SUMMARY

      - name: Upload results as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-summary
          path: |
            ./flags.json
            ./test-summary
            ./tests-out/videos
            ./tests-out/screenshots

      - name: Communicate BIT failure on originating issue
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: failure() && github.event.client_payload.origin_issue
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = 'bitwarden';
            const runURL = `https://github.com/${owner}/browser-interactions-testing/actions/runs/${context.runId}`;
            const configURL = new URL('${{ vars.BW_REMOTE_VAULT_CONFIG_MATCH }}');
            const message = `‚ö†Ô∏è **Files have been modified in this PR that impact the Autofill experience** ‚ö†Ô∏è

            [BIT](https://github.com/${owner}/browser-interactions-testing) was run to verify no regressions have been introduced to the core Autofill experience. The tests ran with the same feature flag configuration used by \`${configURL.hostname}\`

            ‚ùå Unfortunately, one or more of these BIT tests failed. üòû

            Please resolve the failure before merging; reach out to \`@bitwarden/team-autofill-dev\` if you'd like help.

            You can view the detailed results of the tests [here](${runURL}).`;

            github.rest.issues.createComment({
              issue_number: context.payload.client_payload.origin_issue,
              owner: owner,
              repo: 'clients',
              body: message
            });

      - name: Communicate BIT success on originating issue
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: success() && github.event.client_payload.origin_issue
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = 'bitwarden';
            const message = `‚ö†Ô∏è **Files have been modified in this PR that impact the Autofill experience** ‚ö†Ô∏è

            [BIT](https://github.com/${owner}/browser-interactions-testing) was run to verify no regressions have been introduced to the core Autofill experience.

            ‚úÖ Fortunately, [these BIT tests have passed](https://github.com/${owner}/browser-interactions-testing/actions/runs/${context.runId})! üéâ

            github.rest.issues.createComment({
              issue_number: context.payload.client_payload.origin_issue,
              owner: owner,
              repo: 'clients',
              body: message
            });
