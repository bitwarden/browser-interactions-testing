name: Browser-client-a11y-evaluation
run-name: Browser client a11y evaluation with extension build ${{ inputs.CLIENTS_BRANCH }} by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      CLIENTS_BRANCH:
        default: "main"
        description: "clients branch of browser build to use"
        required: true
        type: string
      FEATURE_FLAGS:
        default: "{}"
        description: 'JSON key-value pairs representing feature flag states. (e.g. {"autofill-v2": true, "autofill-overlay": false})'
        required: true
        type: string
jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: "23"

      - name: Create dotenv file
        uses: ./.github/actions/setup-env-file
        with:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          BW_DB_PORT: ${{ vars.BW_DB_PORT }}
          BW_DB_PROVIDER: ${{ vars.BW_DB_PROVIDER }}
          BW_DB_SERVER: ${{ vars.BW_DB_SERVER }}
          BW_DOMAIN: ${{ vars.BW_DOMAIN }}
          BW_ENABLE_SSL: ${{ vars.BW_ENABLE_SSL }}
          BW_SSL_CERT: ${{ vars.BW_SSL_CERT }}
          BW_SSL_KEY: ${{ vars.BW_SSL_KEY }}
          CI: true
          CLI_SERVE_HOST: ${{ vars.CLI_SERVE_HOST }}
          CLI_SERVE_PORT: ${{ vars.CLI_SERVE_PORT }}
          EXTENSION_BUILD_PATH: ${{ vars.EXTENSION_BUILD_PATH }}
          PAGES_HOST_INSECURE_PORT: ${{ vars.PAGES_HOST_INSECURE_PORT }}
          PAGES_HOST_PORT: ${{ vars.PAGES_HOST_PORT }}
          PAGES_HOST: ${{ vars.PAGES_HOST }}
          VAULT_HOST_INSECURE_PORT: ${{ vars.VAULT_HOST_INSECURE_PORT }}
          VAULT_HOST_PORT: ${{ vars.VAULT_HOST_PORT }}
          VAULT_HOST_URL: ${{ vars.VAULT_HOST_URL }}

      - name: Create feature flags file
        env:
          _FEATURE_FLAGS: ${{ inputs.FEATURE_FLAGS }}
        run: echo "{\"flagValues\":$_FEATURE_FLAGS}" > "flags.json"

      - name: Download extension artifact
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build-browser.yml
          workflow_conclusion: ""
          branch: ${{ inputs.CLIENTS_BRANCH }}
          name: dist-chrome-MV3-\w{7}\.zip
          name_is_regexp: true
          repo: bitwarden/clients
          if_no_artifact_found: fail
          skip_unpack: true

      - name: Unzip extension artifact
        run: |
          unzip -o "*dist-chrome-*.zip.zip"
          unzip -o "dist-chrome*.zip" -d build

      - name: Generate and install certs
        run: |
          npm run setup:ssl
          sudo apt-get install libnss3-tools=2:3.98-1build1
          . .env
          mkdir -p "$HOME/.pki/nssdb"
          certutil -d "$HOME/.pki/nssdb" -N --empty-password
          certutil -d "sql:$HOME/.pki/nssdb" -A -t "CP,CP," -n TestAutomationSSL -i "./$BW_SSL_CERT"

      - name: Install Bitwarden CLI
        run: npm install -g @bitwarden/cli@2024.2.0

      - name: Install project dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Build and start the test vault
        run: docker compose up -d --build --remove-orphans --wait --wait-timeout 60

      - name: Setup the vault test account
        run: npm run seed:vault:account

      - name: Setup the vault test account ciphers
        run: |
          npm run start:cli
          npm run seed:vault:ciphers

      - name: Download test site build
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          workflow_conclusion: ""
          branch: main
          name: build-files
          path: test-site
          repo: bitwarden/test-the-web
          if_no_artifact_found: fail

      - name: Copy over certs and install test site dependencies
        run: |
          cp ssl.crt test-site/api/
          cp ssl.key test-site/api/
          cd test-site
          npm ci

      - name: Run browser client a11y evaluation
        run: npm run test:a11y:browser:ci

      - name: Update job summary
        if: always()
        run: echo "$(<./test-summary/test-summary.md)" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload results as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-summary
          path: |
            ./test-summary
            ./tests-out/videos
            ./tests-out/screenshots
