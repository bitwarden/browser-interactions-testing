name: test-notification
run-name: Notification tests with extension build ${{ inputs.CLIENTS_BRANCH }} by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      CLIENTS_BRANCH:
        required: true
        default: "main"
        description: "clients branch of browser build to use"
        type: string
      FEATURE_FLAGS:
        required: true
        default: '{"autofill-v2": true, "autofill-overlay": false}'
        description: 'JSON key-value pairs representing feature flag states. (e.g. {"autofill-v2": true, "autofill-overlay": false})'
        type: string
jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: "20"

      - name: Create dotenv file
        run: |
          sudo setcap 'cap_net_bind_service=+ep' `which node`
          echo "${{ secrets.ENV_FILE }}" | base64 --decode > .env

      - name: Create feature flags file
        run: echo "{\"flagValues\":${{ inputs.FEATURE_FLAGS }}}" > flags.json

      - name: Download extension artifact
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe # v3.1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build-browser.yml
          workflow_conclusion: ""
          branch: ${{ inputs.CLIENTS_BRANCH }}
          name: ^dist-chrome-(?!MV3-)\w{7}\.zip$
          name_is_regexp: true
          repo: bitwarden/clients
          if_no_artifact_found: fail

      - name: Unzip extension artifact
        run: |
          mkdir -p build
          unzip -o dist-chrome-*.zip/dist-chrome.zip -d build

      - name: Generate and install certs
        run: |
          npm run setup:ssl
          sudo apt-get install libnss3-tools=2:3.68.2-0ubuntu1
          . .env
          mkdir -p $HOME/.pki/nssdb
          certutil -d $HOME/.pki/nssdb -N --empty-password
          certutil -d sql:$HOME/.pki/nssdb -A -t "CP,CP," -n TestAutomationSSL -i ./$BW_SSL_CERT

      - name: Install Bitwarden CLI
        run: npm install -g @bitwarden/cli@2024.3.1

      - name: Install project dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Build and start the test vault
        run: docker compose up -d --build --remove-orphans --wait --wait-timeout 60

      - name: Setup the vault test account
        run: npm run seed:vault:account

      - name: Setup the vault test account ciphers
        run: npm run seed:vault:ciphers:ci

      - name: Setup test site
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}'
          npm run setup:test-site

      - name: Run autofill tests
        run: npm run test:static:notification:headless

      - name: Upload results as artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: always()
        with:
          name: test-summary
          path: |
            ./test-summary
            ./tests-out/videos
            ./tests-out/screenshots
